#Neural-Network Challenge
#Triston Blaney
#Source: Data Science course wiki
#Source: Data science slides with code example
#Last saved 12/11/2019


import neuro
import linear_algebra
import math




inputs = [
[
1,1,1,1,1,0,0,0,0,0,
1,0,1,0,1,0,0,0,0,0,
1,0,1,0,1,0,0,0,0,0,
1,0,1,0,1,0,0,0,0,0,
1,1,1,1,1,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,
],
[
0,1,1,1,1,1,0,0,0,0,
0,1,0,1,0,1,0,0,0,0,
0,1,0,1,0,1,0,0,0,0,
0,1,0,1,0,1,0,0,0,0,
0,1,1,1,1,1,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,
],
[
0,0,1,1,1,1,1,0,0,0,
0,0,1,0,1,0,1,0,0,0,
0,0,1,0,1,0,1,0,0,0,
0,0,1,0,1,0,1,0,0,0,
0,0,1,1,1,1,1,0,0,0,
0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,
],
[
0,0,0,1,1,1,1,1,0,0,
0,0,0,1,0,1,0,1,0,0,
0,0,0,1,0,1,0,1,0,0,
0,0,0,1,0,1,0,1,0,0,
0,0,0,1,1,1,1,1,0,0,
0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,
],
[
1,1,1,1,1,0,0,0,0,0,
1,0,1,0,1,0,0,0,0,0,
1,1,0,1,1,0,0,0,0,0,
1,0,1,0,1,0,0,0,0,0,
1,1,1,1,1,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,
],
[
0,1,1,1,1,1,0,0,0,0,
0,1,0,1,0,1,0,0,0,0,
0,1,1,0,1,1,0,0,0,0,
0,1,0,1,0,1,0,0,0,0,
0,1,1,1,1,1,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,
],
[
0,0,1,1,1,1,1,0,0,0,
0,0,1,0,1,0,1,0,0,0,
0,0,1,1,0,1,1,0,0,0,
0,0,1,0,1,0,1,0,0,0,
0,0,1,1,1,1,1,0,0,0,
0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,
],
[
0,0,0,1,1,1,1,1,0,0,
0,0,0,1,0,1,0,1,0,0,
0,0,0,1,1,0,1,1,0,0,
0,0,0,1,0,1,0,1,0,0,
0,0,0,1,1,1,1,1,0,0,
0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,
],
[
0,0,0,0,1,1,1,1,1,0,
0,0,0,0,1,0,1,0,1,0,
0,0,0,0,1,1,0,1,1,0,
0,0,0,0,1,0,1,0,1,0,
0,0,0,0,1,1,1,1,1,0,
0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,
],
[
1,1,1,1,1,0,0,0,0,0,
1,0,1,1,1,0,0,0,0,0,
1,1,0,1,1,0,0,0,0,0,
1,1,1,0,1,0,0,0,0,0,
1,1,1,1,1,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,
],
[
0,1,1,1,1,1,0,0,0,0,
0,1,0,1,1,1,0,0,0,0,
0,1,1,0,1,1,0,0,0,0,
0,1,1,1,0,1,0,0,0,0,
0,1,1,1,1,1,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,
],
[
0,0,1,1,1,1,1,0,0,0,
0,0,1,0,1,1,1,0,0,0,
0,0,1,1,0,1,1,0,0,0,
0,0,1,1,1,0,1,0,0,0,
0,0,1,1,1,1,1,0,0,0,
0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,
],
[
0,0,0,1,1,1,1,1,0,0,
0,0,0,1,0,1,1,1,0,0,
0,0,0,1,1,0,1,1,0,0,
0,0,0,1,1,1,0,1,0,0,
0,0,0,1,1,1,1,1,0,0,
0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,
],
[
0,0,0,0,1,1,1,1,1,0,
0,0,0,0,1,0,1,1,1,0,
0,0,0,0,1,1,0,1,1,0,
0,0,0,0,1,1,1,0,1,0,
0,0,0,0,1,1,1,1,1,0,
0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,
],
[
0,0,0,0,0,1,1,1,1,1,
0,0,0,0,0,1,0,1,1,1,
0,0,0,0,0,1,1,0,1,1,
0,0,0,0,0,1,1,1,0,1,
0,0,0,0,0,1,1,1,1,1,
0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,
],
[
1,1,1,1,1,0,0,0,0,0,
1,0,1,1,1,0,0,0,0,0,
1,1,1,1,1,0,0,0,0,0,
1,1,1,0,1,0,0,0,0,0,
1,1,1,1,1,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,
],
[
0,1,1,1,1,1,0,0,0,0,
0,1,0,1,1,1,0,0,0,0,
0,1,1,1,1,1,0,0,0,0,
0,1,1,1,0,1,0,0,0,0,
0,1,1,1,1,1,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,
],
[
0,0,1,1,1,1,1,0,0,0,
0,0,1,0,1,1,1,0,0,0,
0,0,1,1,1,1,1,0,0,0,
0,0,1,1,1,0,1,0,0,0,
0,0,1,1,1,1,1,0,0,0,
0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,
],
[
0,0,0,1,1,1,1,1,0,0,
0,0,0,1,0,1,1,1,0,0,
0,0,0,1,1,1,1,1,0,0,
0,0,0,1,1,1,0,1,0,0,
0,0,0,1,1,1,1,1,0,0,
0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,
],
[
0,0,0,0,1,1,1,1,1,0,
0,0,0,0,1,0,1,1,1,0,
0,0,0,0,1,1,1,1,1,0,
0,0,0,0,1,1,1,0,1,0,
0,0,0,0,1,1,1,1,1,0,
0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,
],
[
0,0,0,0,0,1,1,1,1,1,
0,0,0,0,0,1,0,1,1,1,
0,0,0,0,0,1,1,1,1,1,
0,0,0,0,0,1,1,1,0,1,
0,0,0,0,0,1,1,1,1,1,
0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,
],
[
1,1,1,1,1,0,0,0,0,0,
1,1,1,1,1,0,0,0,0,0,
1,1,0,1,1,0,0,0,0,0,
1,1,1,1,1,0,0,0,0,0,
1,1,1,1,1,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,
],
[
0,1,1,1,1,1,0,0,0,0,
0,1,1,1,1,1,0,0,0,0,
0,1,1,0,1,1,0,0,0,0,
0,1,1,1,1,1,0,0,0,0,
0,1,1,1,1,1,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,
],
[
0,0,1,1,1,1,1,0,0,0,
0,0,1,1,1,1,1,0,0,0,
0,0,1,1,0,1,1,0,0,0,
0,0,1,1,1,1,1,0,0,0,
0,0,1,1,1,1,1,0,0,0,
0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,
],
[
0,0,0,1,1,1,1,1,0,0,
0,0,0,1,1,1,1,1,0,0,
0,0,0,1,1,0,1,1,0,0,
0,0,0,1,1,1,1,1,0,0,
0,0,0,1,1,1,1,1,0,0,
0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,
],
[
0,0,0,0,1,1,1,1,1,0,
0,0,0,0,1,1,1,1,1,0,
0,0,0,0,1,1,0,1,1,0,
0,0,0,0,1,1,1,1,1,0,
0,0,0,0,1,1,1,1,1,0,
0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,
],
[
0,0,0,0,0,1,1,1,1,1,
0,0,0,0,0,1,1,1,1,1,
0,0,0,0,0,1,1,0,1,1,
0,0,0,0,0,1,1,1,1,1,
0,0,0,0,0,1,1,1,1,1,
0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,
],
[
1,1,1,1,1,0,0,0,0,0,
1,0,1,0,1,0,0,0,0,0,
1,1,1,1,1,0,0,0,0,0,
1,0,1,0,1,0,0,0,0,0,
1,1,1,1,1,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,
],
[
0,1,1,1,1,1,0,0,0,0,
0,1,0,1,0,1,0,0,0,0,
0,1,1,1,1,1,0,0,0,0,
0,1,0,1,0,1,0,0,0,0,
0,1,1,1,1,1,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,
],
[
0,0,1,1,1,1,1,0,0,0,
0,0,1,0,1,0,1,0,0,0,
0,0,1,1,1,1,1,0,0,0,
0,0,1,0,1,0,1,0,0,0,
0,0,1,1,1,1,1,0,0,0,
0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,
],
[
0,0,0,1,1,1,1,1,0,0,
0,0,0,1,0,1,0,1,0,0,
0,0,0,1,1,1,1,1,0,0,
0,0,0,1,0,1,0,1,0,0,
0,0,0,1,1,1,1,1,0,0,
0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,
],
[
0,0,0,0,1,1,1,1,1,0,
0,0,0,0,1,0,1,0,1,0,
0,0,0,0,1,1,1,1,1,0,
0,0,0,0,1,0,1,0,1,0,
0,0,0,0,1,1,1,1,1,0,
0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,
],
[
0,0,0,0,0,1,1,1,1,1,
0,0,0,0,0,1,0,1,0,1,
0,0,0,0,0,1,1,1,1,1,
0,0,0,0,0,1,0,1,0,1,
0,0,0,0,0,1,1,1,1,1,
0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,
],
[
0,0,0,0,0,0,0,0,0,0,    
0,0,0,0,0,1,1,1,1,1,
0,0,0,0,0,1,0,1,0,1,
0,0,0,0,0,1,1,1,1,1,
0,0,0,0,0,1,0,1,0,1,
0,0,0,0,0,1,1,1,1,1,
0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,
],
[
0,0,0,0,0,0,0,0,0,0,    
0,0,0,0,1,1,1,1,1,0,
0,0,0,0,1,0,1,0,1,0,
0,0,0,0,1,1,1,1,1,0,
0,0,0,0,1,0,1,0,1,0,
0,0,0,0,1,1,1,1,1,0,
0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,
]]

targets = [[.6],[.6],[.6],[.6],[.5],[.5],[.5],[.5],[.5],[.3],[.3],[.3],[.3],
[.3],[.3],[.2],[.2],[.2],[.2],[.2],[.2],[.1],[.1],[.1],[.1],[.1],[.1],[.4],
[.4],[.4],[.4],[.4],[.4],[.4],[.4]]

reps = 550
network = []

network = neuro.setup_network(inputs)
neuro.train(network, inputs, targets, reps)
neuro.writeNetworkToFile("results.net", network)